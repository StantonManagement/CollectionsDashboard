client/src/hooks/use-mobile.tsx:export function useIsMobile() {
client/src/hooks/use-toast.ts:export const reducer = (state: State, action: Action): State => {
client/src/components/ui/button.tsx:export interface ButtonProps
client/src/components/ui/badge.tsx:export interface BadgeProps
client/src/components/ui/sheet.tsx:interface SheetContentProps
client/src/components/ui/toaster.tsx:export function Toaster() {
client/src/components/payment-plans-tab.tsx:export default function PaymentPlansTab() {
client/src/components/escalations-tab.tsx:export default function EscalationsTab() {
client/src/components/ai-approvals-tab.tsx:export default function AiApprovalsTab() {
client/src/components/conversations-tab.tsx:export default function ConversationsTab() {
client/src/components/tabbed-interface.tsx:export default function TabbedInterface() {
client/src/components/collections-queue.tsx:interface CollectionsQueueProps {
client/src/components/collections-queue.tsx:export default function CollectionsQueue({ fullWidth = false }: CollectionsQueueProps) {
client/src/lib/utils.ts:export function cn(...inputs: ClassValue[]) {
client/src/lib/queryClient.ts:export async function apiRequest(
client/src/lib/queryClient.ts:export const getQueryFn: <T>(options: {
client/src/lib/queryClient.ts:export const queryClient = new QueryClient({
client/src/pages/not-found.tsx:export default function NotFound() {
client/src/pages/settings.tsx:export default function SettingsPage() {
client/src/pages/collections.tsx:export default function CollectionsPage() {
client/src/pages/dashboard.tsx:export default function Dashboard() {
